name: Deploy to EKS

on:
  push:
    branches:
      - main

env:
  AWS_REGION: us-east-1
  CLUSTER_NAME: adot-eks-clusters
  NAMESPACE: adot-namespace  # updated to match your CDK config

jobs:
  deploy:
    runs-on: ubuntu-latest

    permissions:
      id-token: write   # For GitHub OIDC to AWS
      contents: read    # Needed to read repo contents

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install Python dependencies
      run: |
        if [ -f requirements.txt ]; then
          pip install -r requirements.txt
        else
          echo "No requirements.txt found. Skipping Python dependency installation."
        fi

    - name: Install CDK and dependencies
      run: |
        npm install -g aws-cdk
        if [ -f package-lock.json ]; then
          npm ci
        else
          npm install
        fi

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
        role-to-assume: arn:aws:iam::131332286832:role/githubdeployrole
        aws-region: ${{ env.AWS_REGION }}
        audience: sts.amazonaws.com

    - name: Bootstrap CDK (optional if already bootstrapped)
      run: npx cdk bootstrap aws://131332286832/us-east-1

    - name: Update kubeconfig for EKS
      run: |
        aws eks update-kubeconfig --region $AWS_REGION --name $CLUSTER_NAME

    - name: CDK Synth
      run: npx cdk synth

    - name: CDK Deploy
      run: npx cdk deploy --require-approval never
      env:
        OIDC_PROVIDER_ARN: arn:aws:iam::131332286832:oidc-provider/oidc.eks.us-east-1.amazonaws.com/id/DCEC6B0056C380571D6F9FB7CC4D2456
        KUBECTL_ROLE_ARN: arn:aws:iam::131332286832:role/eksctl-adot-eks-clusters-cluster-ServiceRole-nFa4Yqt1SVVq

    # Optional: Only needed if you have extra raw manifest files
    - name: Apply Kubernetes manifests (optional)
      if: ${{ always() }}
      run: |
        kubectl cluster-info
        if [ -d "manifests/" ]; then
          kubectl apply -f manifests/ -n $NAMESPACE
        else
          echo "No manifests directory found."
        fi
